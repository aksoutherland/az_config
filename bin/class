#!/bin/bash
# this script is used to either create or delete a class lab environment in azure
# we need to make sure we have the latest version of the class_var.txt file in the correct location
FILE=/home/$USER/az_config/.vars
if [ -f ${FILE} ];
then
	echo "vars exists"
else
	wget https://github.com/aksoutherland/az_config/raw/master/vars -O /home/$USER/az_config/.vars
fi

# now we need to source the file so that contains the variables needed to create our class environment
source /home/$USER/az_config/.vars

# we have 4 working directories set as environment variables
# this location is where we find the scripts to create the azure env
ENV_DIR=/home/$USER/lab_setup/azure-course-tools
# this is where we find the script to create the VM's
VM_DIR=/home/$USER/lab_setup/create-azure-vm
# this is the VM template dir
VM_TMPL_DIR=/home/$USER/az_config

# here we are setting the variables for the course deployment
# action - what are we doing
ACTION=$1
# this is the course that we are working with
COURSE=$2
# this is the number of stations that we will be deploying
SEAT=$3

# here we get the resource group name
export RG="$(az group list -o table | sed -n '3 p' | cut -d " " -f1)"

# here we get the storage account name
export ACCOUNT="$(az storage account list -o table | sed -n '4 p' | awk '{ print $9 }')"

# Here we are remapping some variables so that we don't have to edit the script each time we change to a different course
sub1=VM_DISK_SIZE_${COURSE}	
sub2=VM_PASSWD_${COURSE}	
sub3=VM_SIZE_${COURSE}	

usage () {
	echo
	echo "USAGE: $0 <action> <course> <seat count>"
	echo
	echo "When running this script, you need to supply 3 arguments,"
	echo
	echo "1. The action, "create" to deploy a class environment, or "delete" to destroy a class environment"
	echo
	echo "2. The name of the course you wish to either create or delete."
	echo
	echo "3. The number of stations you wish to create in your azure env"
	echo
	echo "Please re-run the command with the proper arguments"
	echo
	echo "EXAMPLE COMMANDS: class create kub201 3"
	echo "                  class delete kub201 0"
	echo
}

if [ -z "${ACTION}" ] 
then
	echo
	echo "You are missing you action command"
	echo "Please specify either create or delete as your action"
	echo 
	usage
	exit

elif [ -z "${COURSE}" ]
then
	echo
	echo "You are missing the course"
	echo "Please specify the course code for the course you want to create or delete"
	echo 
	usage
	exit

elif [ -z "${SEAT}" ]
then
	echo
	echo "You are missing the count"
	echo "Please specify the number of stations you wish to create"
	echo "If deleteing a class, set the count to 0"
	echo "Don't forget to create an extra station for demos"
	echo
	usage
	exit

fi

create_course () {
	mkdir ${VM_TMPL_DIR}/${COURSE}
		cp ${VM_TMPL_DIR}/course-environment.cfg.template ${VM_TMPL_DIR}/${COURSE}/${COURSE}.cfg
		sed -i "s/REGION=.*/REGION=${REGION}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}.cfg
		sed -i "s/COURSE_RESOURCE_GROUP_BASE_NAME=.*/COURSE_RESOURCE_GROUP_BASE_NAME=${COURSE}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}.cfg
		sed -i "s/COURSE_STORAGE_ACCOUNT_BASE_NAME=.*/COURSE_STORAGE_ACCOUNT_BASE_NAME=${COURSE}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}.cfg
		sed -i "s/COURSE_STORAGE_CONTAINER_NAME=.*/COURSE_STORAGE_CONTAINER_NAME=course-disks/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}.cfg
		sed -i "s/IMAGE_SOURCE_RESOURCE_GROUP=.*/IMAGE_SOURCE_RESOURCE_GROUP=${RG}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}.cfg
		sed -i "s/IMAGE_SOURCE_STORAGE_ACCOUNT=.*/IMAGE_SOURCE_STORAGE_ACCOUNT=${ACCOUNT}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}.cfg
		sed -i "s/IMAGE_SOURCE_CONTAINER_NAME=.*/IMAGE_SOURCE_CONTAINER_NAME=vhds/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}.cfg
		sed -i "s/IMAGE_SOURCE_IMAGE_FILE=.*/IMAGE_SOURCE_IMAGE_FILE=${COURSE}-template-disk.vhd/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}.cfg
	bash ${ENV_DIR}/create-course-env-in-azure.sh ${VM_TMPL_DIR}/${COURSE}/${COURSE}.cfg
	for VM in $( seq 1 ${SEAT})
	do
		cp ${VM_TMPL_DIR}/template.azvm ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
		sed -i "s/REGION=.*/REGION=${REGION}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
		sed -i "s/RESOURCE_GROUP=.*/RESOURCE_GROUP=${COURSE}-${REGION}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
		sed -i "s/STORAGE_ACCOUNT=.*/STORAGE_ACCOUNT=${COURSE}${REGION}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
                sed -i "s/STORAGE_CONTAINER_NAME=.*/STORAGE_CONTAINER_NAME="vhds"/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
                sed -i "s/SOURCE_STORAGE_CONTAINER_NAME=.*/SOURCE_STORAGE_CONTAINER_NAME="course-disks"/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
	   	sed -i "s/SOURCE_IMAGE_FILE=.*/SOURCE_IMAGE_FILE=${COURSE}-template-disk.vhd/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
 	        sed -i "s/VM_NAME=.*/VM_NAME=${COURSE}-student${VM}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
	        sed -i "s/VM_SIZE=.*/VM_SIZE=${!sub3}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
		sed -i "s/VM_DISK_SIZE=.*/VM_DISK_SIZE=${!sub1}/g" ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
	bash ${VM_DIR}/create-azure-vm.sh ${VM_TMPL_DIR}/${COURSE}/${COURSE}-student${VM}.azvm
	done
        # there have been issues reported setting the VM password using the template so we use this instead to set the passwords
	for i in $(az vm list -g ${COURSE}-${REGION} --query [].[name] --output tsv)
	do 
	az vm user update --resource-group ${COURSE}-${REGION} --name $i --username tux --password ${!sub2}
	done
        # now we want to get a list of all of the IP's for the VM's so that we can share them with the class
	echo 
	az vm list-ip-addresses -g ${COURSE}-${REGION} --output table
	echo 
	echo "Your course has been deployed"
	echo
}

delete_course () {
	az group delete -n ${COURSE}-${REGION}
	rm -r ${VM_TMPL_DIR}/${COURSE} 2>/dev/null
	echo
	echo "Your course has been removed"
	echo
}

main () {
	echo
	echo "Action..............: ${ACTION}"
	echo "Course Code.........: ${COURSE}"
	echo "Station Count.......: ${SEAT}"
	echo "==========================="
	echo
	echo
	
	case ${ACTION} in 
		create)
			create_course
		;;
		delete)
			delete_course
		;;

	esac
}

main
